environment:
  global:
    SHELLOPTS: igncr

    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      CYG_BIN: "C:\\cygwin64\\bin"
      CYG_BASH: "C:\\cygwin64\\bin\\bash"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      CYG_BIN: "C:\\cygwin64\\bin"
      CYG_BASH: "C:\\cygwin64\\bin\\bash"

install:
  - ps: "ls C:\\Python27-x64"
 
  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  # Python first, Cygwin second. Find cygwin.dll, but not python from cygwin
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%CYG_BIN%;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  #- "%CMD_IN_ENV% pip install -r dev-requirements.txt"
  - env
  - python --version
  - pip install virtualenv
   
before_build:
    - dir 
    - '%CYG_BASH% -c "set -x; source common_utils.sh; source appveyor_steps.sh; before_install"'

build_script:
    # Maybe get and clean and patch source
    - '%CYG_BASH% -lc "clean_code $REPO_DIR $BUILD_COMMIT"'
    - '%CYG_BASH% -lc "build_wheel $REPO_DIR $PLAT"'

test_script:
    - '%CYG_BASH% -lc "install_run $PLAT"'

